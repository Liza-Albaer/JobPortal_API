// <auto-generated />
using System;
using JobPortal.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobPortal.EF.Migrations
{
    [DbContext(typeof(JobPortalDbContext))]
    [Migration("20250205230838_InitialMigrations")]
    partial class InitialMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JobPortal.core.Models.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobId"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("Nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("Nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("Nvarchar(max)");

                    b.Property<DateTime>("PostedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Requirements")
                        .IsRequired()
                        .HasColumnType("Nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("Nvarchar(50)");

                    b.HasKey("JobId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            JobId = 1,
                            Company = "TechCorp",
                            Description = "Develop and maintain web applications.",
                            Location = "New York",
                            PostedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Requirements = "3+ years experience in C# and ASP.NET.",
                            Title = "Software Engineer"
                        },
                        new
                        {
                            JobId = 2,
                            Company = "DataCorp",
                            Description = "Analyze large datasets and provide insights.",
                            Location = "San Francisco",
                            PostedDate = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Requirements = "Experience with SQL and Power BI.",
                            Title = "Data Analyst"
                        });
                });

            modelBuilder.Entity("JobPortal.core.Models.JobApplication", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<DateTime>("AppliedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("Nvarchar(max)");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("ResumeUrl")
                        .IsRequired()
                        .HasColumnType("Nvarchar(max)");

                    b.HasKey("ApplicationId");

                    b.HasIndex("JobId");

                    b.ToTable("JobApplications");

                    b.HasData(
                        new
                        {
                            ApplicationId = 1,
                            AppliedDate = new DateTime(2025, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "johndoe@example.com",
                            JobId = 1,
                            Name = "John Doe",
                            ResumeUrl = "resumes/johndoe.pdf"
                        },
                        new
                        {
                            ApplicationId = 2,
                            AppliedDate = new DateTime(2025, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "janesmith@example.com",
                            JobId = 2,
                            Name = "Jane Smith",
                            ResumeUrl = "resumes/janesmith.pdf"
                        });
                });

            modelBuilder.Entity("JobPortal.core.Models.JobApplication", b =>
                {
                    b.HasOne("JobPortal.core.Models.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });
#pragma warning restore 612, 618
        }
    }
}
